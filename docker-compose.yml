version: '3'
services:
  auth:
    container_name: auth
    image: auth
    build:
      context: ./auth
      dockerfile: Dockerfile
      target: development
    restart: on-failure
    command: npm run start:dev
    ports:
      - 9000:9000
    env_file:
      - ./auth/.env
    networks:
      - backend
    volumes:
      - ./auth:/app/auth
      - /app/auth/node_modules
    depends_on:
      - rabbitmq
  appointment:
    container_name: appointment
    build:
      context: ./appointment
      dockerfile: Dockerfile
      target: development
    restart: on-failure
    ports:
      - 9001:9001
    command: npm run start:dev
    env_file:
      - ./appointment/.env
    networks:
      - backend
    volumes:
      - ./appointment:/app/appointment
      - /app/appointment/node_modules
    depends_on:
      - rabbitmq
  gateway:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - 8000:8000
    networks:
      - backend
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=master123
    volumes:
      - rabbit_data:/var/lib/rabbitmq
    networks:
      - backend
  redis:
    image: redis:latest
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass master123
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    networks:
      - backend
networks:
  backend:
    driver: bridge
volumes:
  rabbit_data:
    driver: local
  redis_data:
    driver: local
